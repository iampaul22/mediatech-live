<?php
/**
 * The main admin class, holds everything BPA theme can customize,
 * Initialized right after declaration
 */
class BPA_Admin_Tabs {

    // Declare Tabs
    private $dash_settings_key      = 'bpa_admin_dashboard';
    private $profiles_settings_key  = 'bpa_admin_profiles';
    private $activity_settings_key  = 'bpa_admin_activity_time';
    private $search_settings_key    = 'bpa_admin_search_query';
    private $user_settings_key      = 'bpa_admin_user_query';
    private $page_settings_key      = 'bpa_admin_page_query';
    private $group_settings_key     = 'bpa_admin_group_query';
    private $site_settings_key      = 'bpa_admin_site_query';
    private $settings_settings_key  = 'bpa_admin_settings';
    private $info_settings_key      = 'bpa_admin_info';

    private $bpa_options_key       = 'bpa_admin';
    private $bpa_settings_tabs     = array();

    /**
     * Register stat page & tabs
     */
    function __construct() {
        add_action( 'admin_init', array( &$this, 'register_dash_settings' ) );
		
        add_action( 'admin_init', array( &$this, 'register_site_settings' ) );

        if(is_multisite()){
            add_action( 'network_admin_menu', array( &$this, 'add_admin_menu' ) );
        }else{
            add_action( 'admin_menu', array( &$this, 'add_admin_menu' ) );
        }

        add_action('bpa_admin_footer', array(&$this, 'bpa_footer'), 99);
    }

    /**
     * Registers Dashboard page via the Settings API,
     * appends the setting to the tabs array of the object.
     */
    function register_dash_settings() {
        $this->bpa_settings_tabs[$this->dash_settings_key] = '<span class="icons icon-dash"></span>'.__('Dashboard', 'bpa');

        register_setting( $this->dash_settings_key, $this->dash_settings_key );
        add_settings_section( 'dashboard_widgets', '', array( &$this, 'dash_out' ), $this->dash_settings_key );

        add_action('bpa_admin_dash_left', array(&$this, 'dash_users_count'));
        
    }

    function dash_out(){ ?>
        
        <div id="poststuff">
            <div class="dash_top">
                <?php do_action('bpa_admin_dash_top'); ?>
            </div>
            <div class="dash_center clearfix">
                <div class="dash_left">
                    <?php do_action('bpa_admin_dash_left'); ?>
                </div>
                <div class="dash_right">
                    <?php do_action('bpa_admin_dash_right'); ?>
                </div>
            </div>
            <div class="dash_bottom">
                <?php do_action('bpa_admin_dash_bottom'); ?>
            </div>
        </div>
        
        
        <?php
    }


    function dash_users_count(){
        global $wpdb, $bp;
        $users = array();
        // in development...
        $users['bad']['empty_profiles']['label']  = __('<abbr title="That means the only system required field called *Base* has some content (generated by BuddyPress, not a user)">Empty</abbr> Profiles', 'bpa');
        $users['bad']['empty_profiles']['number'] = $wpdb->get_var($wpdb->prepare("SELECT COUNT(`ID`) FROM {$wpdb->users}
                                                        WHERE
                                                            `ID` NOT IN (
                                                                SELECT DISTINCT `user_id`
                                                                FROM {$bp->profile->table_name_data}
                                                                WHERE `field_id` > %d)", 1));
        if(is_multisite()){
		  // in development...
        }else{
          // in development...
        }

        // good
        $users['good']['registered']['label']  = __('Good &amp; Registered', 'bpa');
        $users['good']['registered']['number'] = $wpdb->get_var($wpdb->prepare("SELECT COUNT(ID) FROM {$wpdb->users}
                                        WHERE `user_status` = %d", 0));

        $users = apply_filters('bpa_dash_users_count', $users);
        ?>
        <div class="postbox users_count">
            <h3 class="hndle"><?php _e('Users', 'bpa'); ?></h3>
            <div class="inside clearfix">
                <div class="users_bad">
                    <h4><?php _e('Not activated or with empty profiles', 'bpa'); ?></h4>
                    <ul>
                        <?php foreach($users['bad'] as $type => $value) {
                            $display = ($value['number']!=0)?'':'hide';
                            ?>
                            <li class="<?php echo $display; ?>">
                                <span>#<?php echo $value['number'];?></span> <?php echo $value['label']; ?>
                                <?php if($type == "empty_profiles" || $type == "not_active" || $type == "not_activated") { ?>
                                    <?php if($type == "not_activated" && is_multisite()) {}else{ ?>
                                        &raquo
                                    <?php } ?>
                                <?php } ?>
                            </li>
                        <?php } ?>

                        <?php do_action('bpa_dash_users_count_list_red', $users); ?>
                    </ul>
                </div>
                <div class="users_good">
                    <h4><?php _e('Activated users with full profiles', 'bpa'); ?></h4>
                    <ul>
                        <?php foreach($users['good'] as $type => $value) {
                            $display = ($value['number']!=0)?'':'hide';
                            ?>
                            <li class="<?php echo $display; ?>">
                                <span>#<?php echo $value['number'];?></span> <?php echo $value['label']; ?>
                            </li>
                        <?php } ?>
                        <?php do_action('bpa_dash_users_count_list_green', $users); ?>
                    </ul>
                </div>
            </div><!--/.inside-->
        </div><!--/.postbox-->
        <?php
    }

    
    function search_out(){
        
        global $wpdb; ?>
        
        <div id="poststuff">
            <div class="first_half">
                <div class="postbox">
                    <h3 class="hndle"><?php _e('Keywords', 'bpa'); ?></h3>
                    <div class="inside">
                        
                        <?php
                        //Create an instance of our package class...
                        $chart_table = new Chart_Table();
                        
                        $chart_table->columns = array(
                                'keyword'     => __( 'Keyword' ),
                                'used'        => __( 'Total Usage' ),
                                //'static'      => __( 'Graph' ),
                        );
                        
                        $chart_table->sortable_columns = array(
                                'keyword'     => array('keyword',false), //true means it's already sorted
                                'used'        => array('used',false),
                        );
                        
                        $keywords_query = "SELECT * FROM {$wpdb->prefix}bpa_query";
                        
                        if ( ! isset($_GET['period']) || empty($_GET['period']) ):
                            
                            $_GET['period'] = 'month';
                            $_GET['date_from'] = date('01.m.Y');
                            
                        endif;
                        
                        if ( isset($_GET['period']) && ! empty($_GET['period']) ):
                            
                            switch ( $_GET['period'] ):
                                case 'day':
                                    
                                    $date_to = date('d.m.Y', strtotime("+1 day {$_GET['date_from']}"));
                                    break;
                                
                                case 'week':
                                    
                                    $date_to = date('d.m.Y', strtotime("+1 week {$_GET['date_from']}"));
                                    break;
                                
                                case 'month':
                                    
                                    $date_to = date('d.m.Y', strtotime("+1 month {$_GET['date_from']}"));
                                    break;
                                
                                case 'year':
                                    
                                    $date_to = date('d.m.Y', strtotime("+1 year {$_GET['date_from']}"));
                                    break;
                                
                            endswitch;
                            
                            $rec_range = bpa_sql_date_range( "{$_GET['date_from']}-{$date_to}", "{$wpdb->prefix}bpa_query_history.time", true );
                            
                            if ( $rec_range )
                                
                                $keywords_query = " 
                                SELECT * FROM
                                {$wpdb->prefix}bpa_query
                                INNER JOIN {$wpdb->prefix}bpa_query_history
                                ON {$wpdb->prefix}bpa_query.query_id = {$wpdb->prefix}bpa_query_history.query_id
                                {$rec_range}
                                ";
                        endif;
                        
                        $search_term = isset( $_REQUEST['s'] ) ? $_REQUEST['s'] : "";
                        
                        if ( $search = apply_filters( 'clean_up_string', $search_term, TRUE ) ):
                            
                            $keywords_query .= " WHERE query LIKE '%$search%'";
                            
                        endif;
                        
                        $keywords_query .= " GROUP BY {$wpdb->prefix}bpa_query.query_id";
                        
                        $keywords = $wpdb->get_results( $keywords_query );
                        
                        if ( $keywords ):
                            
                            foreach ($keywords as $keyword ):
                                
                                $count_query = "SELECT * FROM {$wpdb->prefix}bpa_query_history WHERE query_id = '{$keyword->query_id}' ";
                                
                                if ( $rec_range )
                                    
                                    $count_query .= $rec_range;
                                
                                if ($count_object = $wpdb->get_results( $count_query ) ):
                                    
                                    $__count = count($count_object);
                                    
                                else : $__count = $keyword->count; endif;
                                
                                $rows[] = array(
                                                'keyword'   => $keyword->query,
                                                'used'      => $__count,
                                                //'static'    => "<span data-id='{$keyword->query_id}' class='graph'>&raquo;</span>",
                                );
                            endforeach;
                            
                            $chart_table->data = $rows;
                        endif;
                        
                        //Fetch, prepare, sort, and filter our data...
                        $chart_table->prepare_items();
                        ?>
                        
                        <div class="clearfix">
                            <form method="get" class="pull-right">
                                <?php $chart_table->search_box( __( 'Search' ), 'Keyword' ); ?>
                            </form>
                        </div>
                        <!-- Forms are NOT created automatically, so you need to wrap the table in one to use features like bulk actions -->
                        <form id="analytics-filter" method="get">
                            <!-- For plugins, we also need to ensure that the form posts back to our current page -->
                            <input type="hidden" name="page" value="<?php echo $_REQUEST['page'] ?>" />
                            <!-- Now we can render the completed list table -->
                            <?php $chart_table->display(); ?>
                        </form>
                        
                        <div class="clearfix">
                            <form method="get">
                                <?php $chart_table->fiter_date_box( '', '' ); ?>
                            </form>
                        </div>
                    </div><!--/.inside-->
                </div><!--/.postbox-->
            </div><!--/.first_half-->
            <div class="second_half">
                <div class="postbox" id="sticky">
                    <h3 class="hndle" style="cursor:default"><?php _e('Chart', 'bpa'); ?></h3>
                    <div class="inside">
                        <p class="label"></p>
                        
                        <div id="chart_div" style="width: 100%; height: 500px;"></div>
                        
                        <?php if ( $keywords && ! empty($keywords) ): ?>
                            
                            <?php
                            
                            switch ( $_GET['period'] ):
                                
                                case 'day':
                                    
                                    $axis_cover = $axis  = array('Hours');
                                    for( $i = 0; $i < 25; $i++ ):
                                        
                                        if ( $i < 24 )
                                            $axis[] = date('ga', strtotime($_GET['date_from']) + 60*60*$i);
                                        
                                        $axis_cover[] = strtotime($_GET['date_from']) + 60*60*$i;
                                    endfor;
                                    $graph_title = date('dS m, Y. ga', strtotime($_GET['date_from']) ) . " - " . date('ga', $axis_cover[24] );
                                    break;
                                
                                case 'week':
                                    
                                    $axis_cover = $axis  = array('Days');
                                    for( $i = 0; $i < 8; $i++ ):
                                        
                                        if ( $i < 7 )
                                            $axis[] = date('D, dS', strtotime($_GET['date_from']) + 60*60*24*$i);
                                        
                                        $axis_cover[] = strtotime($_GET['date_from']) + 60*60*24*$i;
                                    endfor;
                                    $graph_title = date('dS, F Y', strtotime($_GET['date_from']) ) . " - " . date('dS, F Y', $axis_cover[7] );
                                    break;
                                
                                case 'month':
                                    
                                    $amount_of_days = date('t', strtotime($_GET['date_from']));
                                    $axis_cover = $axis  = array('Days');
                                    for( $i = 0; $i < $amount_of_days + 1; $i++ ):
                                        
                                        if ( $i < $amount_of_days )
                                            $axis[] = date('dS', strtotime($_GET['date_from']) + 60*60*24*$i);
                                        
                                        $axis_cover[] = strtotime($_GET['date_from']) + 60*60*24*$i;
                                    endfor;
                                    $graph_title = date('F Y', strtotime($_GET['date_from']) ) . " - " . date('F Y', $axis_cover[$amount_of_days] );
                                    break;
                                
                                case 'year':
                                    
                                    $axis_cover = $axis  = array('Months');
                                    for( $i = 0; $i < 13; $i++ ):
                                        
                                        if ( $i < 12 )
                                            $axis[] = date('M', strtotime("+{$i} month {$_GET['date_from']}"));
                                        
                                        $axis_cover[] = strtotime("+{$i} month {$_GET['date_from']}");
                                    endfor;
                                    $graph_title = date('F Y', strtotime($_GET['date_from']) ) . " - " . date('F Y', $axis_cover[12] );
                                    break;
                                
                            endswitch;
                                
                                
                            foreach ( $keywords as $keyword ):
                                
                                
                                if ( $rec_range )
                                    
                                    $count_query .= $rec_range;
                                
                                    if ($history = $wpdb->get_results( $count_query ) ):
                                    
                                    $data_maker = array();
                                    
                                    // Grab the keyword
                                    $data_maker[] = ucwords($keyword->query);
                                    
                                    for( $i = 0; $i < count($axis); $i++ ){
                                        
                                        $counter = 0;
                                        
                                        foreach( $history as $graph ){
                                            $the_time = strtotime($graph->time);
                                            $the_start = $axis_cover[$i];
                                            $the_end = $axis_cover[$i + 1];
                                            
                                            if (  $the_time > $the_start && $the_time < $the_end )
                                                $counter++;                                                    
                                        }
                                        
                                        $data_maker[] = $counter;
                                    }
                                    
                                    $lines[] = $data_maker;
                                    
                                endif;
                                
                            endforeach;

                            
                            for( $i = 0; $i < count($axis); $i++ ){
                                
                                $date_collecter   = array();
                                
                                $date_collecter[] = $axis[$i];
                                
                                foreach( $lines as $line )
                                    
                                    $date_collecter[] = $line[$i];
                                
                                $data[] = $date_collecter;
                            }
                            
                            ?>
                            
                            <script type="text/javascript" src="https://www.google.com/jsapi"></script>
                            <script type="text/javascript">
                              google.load("visualization", "1", {packages:["corechart"]});
                              google.setOnLoadCallback(drawChart);
                              function drawChart() {
                                
                                var data = google.visualization.arrayToDataTable(<?php echo json_encode($data); ?>);
                        
                                var options = {
                                  title: '<?php _e($graph_title); ?>'
                                };
                        
                                var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
                                chart.draw(data, options);
                              }
                            </script>
                        
                        <?php endif; // $rows ?>
                    </div><!--/.inside-->
                </div><!--/.postbox-->
            </div><!--/.second_half-->
        </div>
        <?php
    }

    
    function user_out(){
        
        global $wpdb; ?>
        
        <?php do_action( 'page_tabs',
                         array(
                                'default' => __('All Visits for Current Month'),
                                'time-spent' => __('Time Spent'),
                               )
                        ); ?>
        <?php if ( isset($_GET['v']) && $_GET['v'] == 'time-spent' ): ?>
        
            <div id="poststuff">
                <div class="first_half">
                    <div class="postbox">
                        <h3 class="hndle"><?php _e('Users / Time Spent', 'bpa'); ?></h3>
                        <div class="inside">
                            
                            <?php
                            //Create an instance of our package class...
                            $chart_table = new Chart_Table();
                            
                            $chart_table->columns = array(
                                    'user'          => __( 'User' ),
                                    'visits'        => __( 'Total Time Spent' ),
                            );
                            
                            $chart_table->sortable_columns = array(
                                    'user'          => array('user',false), //true means it's already sorted
                                    'visits'        => array('visits',false),
                            );
                            
                            $keywords_query = "SELECT * FROM {$wpdb->prefix}bpa_time_spent";
                            
                            if ( ! isset($_GET['period']) || empty($_GET['period']) ):
                                
                            $_GET['period'] = 'month';
                            $_GET['date_from'] = date('01.m.Y');
                                
                            endif;
                            
                            if ( isset($_GET['period']) && ! empty($_GET['period']) ):
                                
                                switch ( $_GET['period'] ):
                                    case 'day':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 day {$_GET['date_from']}"));
                                        break;
                                    
                                    case 'week':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 week {$_GET['date_from']}"));
                                        break;
                                    
                                    case 'month':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 month {$_GET['date_from']}"));
                                        break;
                                    
                                    case 'year':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 year {$_GET['date_from']}"));
                                        break;
                                    
                                endswitch;
    
                                $rec_range = bpa_sql_date_range( "{$_GET['date_from']}-{$date_to}", "time" );
                                
                                if ( $rec_range )
                                    
                                    $keywords_query = " 
                                    SELECT * FROM
                                    {$wpdb->prefix}bpa_time_spent
                                    WHERE id > 0
                                    {$rec_range}
                                    ";
                            endif;
                            
                            $search_term = isset( $_REQUEST['s'] ) ? $_REQUEST['s'] : "";
                            
                            if ( $search_term && $user_nickname = apply_filters( 'clean_up_string', $search_term, TRUE ) )
                                   
                                $search = get_user_by( 'slug', $user_nickname );
                                $search = isset( $search ) ? $search : "";
                            
                            if ( $search ):
                                
                                $keywords_query .= " AND user_id = {$search->ID}";
                                
                            endif;
                            
                            $keywords_query .= " GROUP BY user_id";
                            
                            
                            $keywords = $wpdb->get_results( $keywords_query );
                            
                            if ( $keywords ):
                                
                                foreach ($keywords as $keyword ):
                                    
                                    $_user = get_userdata( $keyword->user_id );
                                    
                                    $count_query = "SELECT * FROM {$wpdb->prefix}bpa_time_spent WHERE user_id = '{$keyword->user_id}' ";
                                    
                                    if ( $rec_range )
                                        
                                        $count_query .= $rec_range;
                                    
                                    if ($count_object = $wpdb->get_results( $count_query ) ):
                                        
                                        $counter = 0;
                                        foreach( $count_object as $spent_data )
                                            
                                            $counter += $spent_data->spent;
                                        
                                        $counter = time_elapsed(round($counter / 1000));
                                        
                                    else : $counter = 'Not Found!'; endif;
                                    
                                    $rows[] = array(
                                                    'user'        => $_user->user_nicename,
                                                    'visits'      => $counter,
                                    );
                                    
                                endforeach;
                                
                                $chart_table->data = $rows;
                            endif;
                            
                            //Fetch, prepare, sort, and filter our data...
                            $chart_table->prepare_items();
                            ?>
                            
                            <div class="clearfix">
                                <form method="get" class="pull-right">
                                    <?php $chart_table->search_box( __( 'Search' ), 'Keyword' ); ?>
                                </form>
                            </div>
                            <!-- Forms are NOT created automatically, so you need to wrap the table in one to use features like bulk actions -->
                            <form id="analytics-filter" method="get">
                                <!-- For plugins, we also need to ensure that the form posts back to our current page -->
                                <input type="hidden" name="page" value="<?php echo $_REQUEST['page'] ?>" />
                                <!-- Now we can render the completed list table -->
                                <?php $chart_table->display(); ?>
                            </form>
                            
                            <div class="clearfix">
                                <form method="get">
                                    <?php $chart_table->fiter_date_box( '', '' ); ?>
                                </form>
                            </div>
                        </div><!--/.inside-->
                    </div><!--/.postbox-->
                </div><!--/.first_half-->
                <div class="second_half">
                    <div class="postbox" id="sticky">
                        <h3 class="hndle" style="cursor:default"><?php _e('Chart', 'bpa'); ?></h3>
                        <div class="inside">
                            <p class="label"></p>
                            
                            <div id="chart_div" style="width: 100%; height: 500px;"></div>
                            
                            <?php if ( $keywords && ! empty($keywords) ): ?>
                                
                                <?php
                                
                                switch ( $_GET['period'] ):
                                    
                                    case 'day':
                                        
                                        $axis_cover = $axis  = array('Hours');
                                        for( $i = 0; $i < 25; $i++ ):
                                            
                                            if ( $i < 24 )
                                                $axis[] = date('ga', strtotime($_GET['date_from']) + 60*60*$i);
                                            
                                            $axis_cover[] = strtotime($_GET['date_from']) + 60*60*$i;
                                        endfor;
                                        $graph_title = date('dS m, Y. ga', strtotime($_GET['date_from']) ) . " - " . date('ga', $axis_cover[24] );
                                        break;
                                    
                                    case 'week':
                                        
                                        $axis_cover = $axis  = array('Days');
                                        for( $i = 0; $i < 8; $i++ ):
                                            
                                            if ( $i < 7 )
                                                $axis[] = date('D, dS', strtotime($_GET['date_from']) + 60*60*24*$i);
                                            
                                            $axis_cover[] = strtotime($_GET['date_from']) + 60*60*24*$i;
                                        endfor;
                                        $graph_title = date('dS, F Y', strtotime($_GET['date_from']) ) . " - " . date('dS, F Y', $axis_cover[7] );
                                        break;
                                    
                                    case 'month':
                                        
                                        $amount_of_days = date('t', strtotime($_GET['date_from']));
                                        $axis_cover = $axis  = array('Days');
                                        for( $i = 0; $i < $amount_of_days + 1; $i++ ):
                                            
                                            if ( $i < $amount_of_days )
                                                $axis[] = date('dS', strtotime($_GET['date_from']) + 60*60*24*$i);
                                            
                                            $axis_cover[] = strtotime($_GET['date_from']) + 60*60*24*$i;
                                        endfor;
                                        $graph_title = date('F Y', strtotime($_GET['date_from']) ) . " - " . date('F Y', $axis_cover[$amount_of_days] );
                                        break;
                                    
                                    case 'year':
                                        
                                        $axis_cover = $axis  = array('Months');
                                        for( $i = 0; $i < 13; $i++ ):
                                            
                                            if ( $i < 12 )
                                                $axis[] = date('M', strtotime("+{$i} month {$_GET['date_from']}"));
                                            
                                            $axis_cover[] = strtotime("+{$i} month {$_GET['date_from']}");
                                        endfor;
                                        $graph_title = date('F Y', strtotime($_GET['date_from']) ) . " - " . date('F Y', $axis_cover[12] );
                                        break;
                                    
                                endswitch;
                                        
                                    
                                foreach ( $keywords as $keyword ):
                                    
                                    $history_query = "SELECT * FROM {$wpdb->prefix}bpa_time_spent WHERE user_id = '{$keyword->user_id}' ";
                                    
                                    if ( $rec_range )
                                        
                                        $history_query .= $rec_range;
                                    
                                    if ($history = $wpdb->get_results( $history_query ) ):
                                        
                                        $data_maker = array();
                                        
                                        // Grab the keyword
                                        $_user = get_userdata( $keyword->user_id );
                                        $data_maker[] = ucwords($_user->user_nicename);
                                        
                                        for( $i = 1; $i <= count($axis); $i++ ){
                                            
                                            $counter = 0;
                                            
                                            foreach( $history as $graph ){
                                                $the_time = strtotime($graph->time);
                                                $the_start = $axis_cover[$i];
                                                $the_end = $axis_cover[$i + 1];
                                                if (  $the_time > $the_start && $the_time < $the_end )
                                                    $counter+= round((($graph->spent / 1000)/60), 0);                                                    
                                            }
                                            
                                            $data_maker[] = $counter;
                                        }
                                        
                                        $lines[] = $data_maker;
                                        
                                    endif;
                                    
                                endforeach;
    
                                
                                for( $i = 0; $i <= count($axis); $i++ ){
                                    
                                    $date_collecter   = array();
                                    
                                    $date_collecter[] = $axis[$i];
                                    
                                    foreach( $lines as $line )
                                        
                                        $date_collecter[] = $line[$i];
                                    
                                    $data[] = $date_collecter;
                                }
                                
                                ?>
                                
                                <script type="text/javascript" src="https://www.google.com/jsapi"></script>
                                <script type="text/javascript">
                                  google.load("visualization", "1", {packages:["corechart"]});
                                  google.setOnLoadCallback(drawChart);
                                  function drawChart() {
                                    
                                    var data = google.visualization.arrayToDataTable(<?php echo json_encode($data); ?>);
                            
                                    var options = {
                                      title: '<?php _e($graph_title); ?>  ( minutes )'
                                    };
                            
                                    var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
                                    chart.draw(data, options);
                                  }
                                </script>
                            
                            <?php endif; // $rows ?>
                        </div><!--/.inside-->
                    </div><!--/.postbox-->
                </div><!--/.second_half-->
            </div>
        
        <?php else : ?>
        
        
        <div id="poststuff">
            <div class="first_half">
                <div class="postbox">
                    <h3 class="hndle"><?php _e('Users', 'bpa'); ?></h3>
                    <div class="inside">
                        
                        <?php
                        //Create an instance of our package class...
                        $chart_table = new Chart_Table();
                        
                        $chart_table->columns = array(
                                'user'          => __( 'User' ),
                                'visits'        => __( 'Total Visits' ),
                        );
                        
                        $chart_table->sortable_columns = array(
                                'user'          => array('user',false), //true means it's already sorted
                                'visits'        => array('visits',false),
                        );
                        
                        $keywords_query = "SELECT * FROM {$wpdb->prefix}bpa_users";
                        
                        if ( ! isset($_GET['period']) || empty($_GET['period']) ):
                            
                        $_GET['period'] = 'month';
                        $_GET['date_from'] = date('01.m.Y');
                            
                        endif;
                        
                        if ( isset($_GET['period']) && ! empty($_GET['period']) ):
                            
                            switch ( $_GET['period'] ):
                                case 'day':
                                    
                                    $date_to = date('d.m.Y', strtotime("+1 day {$_GET['date_from']}"));
                                    break;
                                
                                case 'week':
                                    
                                    $date_to = date('d.m.Y', strtotime("+1 week {$_GET['date_from']}"));
                                    break;
                                
                                case 'month':
                                    
                                    $date_to = date('d.m.Y', strtotime("+1 month {$_GET['date_from']}"));
                                    break;
                                
                                case 'year':
                                    
                                    $date_to = date('d.m.Y', strtotime("+1 year {$_GET['date_from']}"));
                                    break;
                                
                            endswitch;

                            $rec_range = bpa_sql_date_range( "{$_GET['date_from']}-{$date_to}", "{$wpdb->prefix}bpa_visits.time", true );
                            
                            if ( $rec_range )
                                
                                $keywords_query = " 
                                SELECT * FROM
                                {$wpdb->prefix}bpa_users
                                INNER JOIN {$wpdb->prefix}bpa_visits
                                ON {$wpdb->prefix}bpa_users.user_id = {$wpdb->prefix}bpa_visits.user_id
                                {$rec_range}
                                ";
                        endif;
                        
                        $search_term = isset( $_REQUEST['s'] ) ? $_REQUEST['s'] : "";
                        
                        if ( $search_term && $user_nickname = apply_filters( 'clean_up_string', $search_term, TRUE ) )
                               
                            $search = get_user_by( 'slug', $user_nickname );
                            $search = isset( $search ) ? $search : "";
                        
                        if ( $search ):
                            
                            $keywords_query .= " WHERE {$wpdb->prefix}bpa_users.user_id = {$search->ID}";
                            
                        endif;
                        
                        $keywords_query .= " GROUP BY {$wpdb->prefix}bpa_users.user_id";
                        
                        
                        $keywords = $wpdb->get_results( $keywords_query );
                        
                        
                        if ( $keywords ):
                            
                            foreach ($keywords as $keyword ):
                                
                                $_user = get_userdata( $keyword->user_id );
                                
                                $count_query = "SELECT * FROM {$wpdb->prefix}bpa_visits WHERE user_id = '{$keyword->user_id}' ";
                                
                                if ( $rec_range )
                                    
                                    $count_query .= $rec_range;
                                
                                if ($count_object = $wpdb->get_results( $count_query ) ):
                                    
                                    $__count = count($count_object);
                                    
                                else : $__count = $keyword->count; endif;
                                
                                $rows[] = array(
                                                'user'        => $_user->user_nicename,
                                                'visits'      => $__count,
                                );
                                
                            endforeach;
                            
                            $chart_table->data = $rows;
                        endif;
                        
                        //Fetch, prepare, sort, and filter our data...
                        $chart_table->prepare_items();
                        ?>
                        
                        <div class="clearfix">
                            <form method="get" class="pull-right">
                                <?php $chart_table->search_box( __( 'Search' ), 'Keyword' ); ?>
                            </form>
                        </div>
                        <!-- Forms are NOT created automatically, so you need to wrap the table in one to use features like bulk actions -->
                        <form id="analytics-filter" method="get">
                            <!-- For plugins, we also need to ensure that the form posts back to our current page -->
                            <input type="hidden" name="page" value="<?php echo $_REQUEST['page'] ?>" />
                            <!-- Now we can render the completed list table -->
                            <?php $chart_table->display(); ?>
                        </form>
                        
                        <div class="clearfix">
                            <form method="get">
                                <?php $chart_table->fiter_date_box( '', '' ); ?>
                            </form>
                        </div>
                    </div><!--/.inside-->
                </div><!--/.postbox-->
            </div><!--/.first_half-->
            <div class="second_half">
                <div class="postbox" id="sticky">
                    <h3 class="hndle" style="cursor:default"><?php _e('Chart', 'bpa'); ?></h3>
                    <div class="inside">
                        <p class="label"></p>
                        
                        <div id="chart_div" style="width: 100%; height: 500px;"></div>
                        
                        <?php if ( $keywords && ! empty($keywords) ): ?>
                            
                            <?php
                            
                            switch ( $_GET['period'] ):
                                
                                case 'day':
                                    
                                    $axis_cover = $axis  = array('Hours');
                                    for( $i = 0; $i < 25; $i++ ):
                                        
                                        if ( $i < 24 )
                                            $axis[] = date('ga', strtotime($_GET['date_from']) + 60*60*$i);
                                        
                                        $axis_cover[] = strtotime($_GET['date_from']) + 60*60*$i;
                                    endfor;
                                    $graph_title = date('dS m, Y. ga', strtotime($_GET['date_from']) ) . " - " . date('ga', $axis_cover[24] );
                                    break;
                                
                                case 'week':
                                    
                                    $axis_cover = $axis  = array('Days');
                                    for( $i = 0; $i < 8; $i++ ):
                                        
                                        if ( $i < 7 )
                                            $axis[] = date('D, dS', strtotime($_GET['date_from']) + 60*60*24*$i);
                                        
                                        $axis_cover[] = strtotime($_GET['date_from']) + 60*60*24*$i;
                                    endfor;
                                    $graph_title = date('dS, F Y', strtotime($_GET['date_from']) ) . " - " . date('dS, F Y', $axis_cover[7] );
                                    break;
                                
                                case 'month':
                                    
                                    $amount_of_days = date('t', strtotime($_GET['date_from']));
                                    $axis_cover = $axis  = array('Days');
                                    for( $i = 0; $i < $amount_of_days + 1; $i++ ):
                                        
                                        if ( $i < $amount_of_days )
                                            $axis[] = date('dS', strtotime($_GET['date_from']) + 60*60*24*$i);
                                        
                                        $axis_cover[] = strtotime($_GET['date_from']) + 60*60*24*$i;
                                    endfor;
                                    $graph_title = date('F Y', strtotime($_GET['date_from']) ) . " - " . date('F Y', $axis_cover[$amount_of_days] );
                                    break;
                                
                                case 'year':
                                    
                                    $axis_cover = $axis  = array('Months');
                                    for( $i = 0; $i < 13; $i++ ):
                                        
                                        if ( $i < 12 )
                                            $axis[] = date('M', strtotime("+{$i} month {$_GET['date_from']}"));
                                        
                                        $axis_cover[] = strtotime("+{$i} month {$_GET['date_from']}");
                                    endfor;
                                    $graph_title = date('F Y', strtotime($_GET['date_from']) ) . " - " . date('F Y', $axis_cover[12] );
                                    break;
                                
                            endswitch;
  
                            foreach ( $keywords as $keyword ):
                                
                                
                                if ( $rec_range )
                                    
                                    $count_query .= $rec_range;
                                
                                    if ($history = $wpdb->get_results( $count_query ) ):
                                    
                                    $data_maker = array();
                                    
                                    // Grab the keyword
                                    $_user = get_userdata( $keyword->user_id );
                                    $data_maker[] = ucwords($_user->user_nicename);
                                    
                                    for( $i = 0; $i < count($axis); $i++ ){
                                        
                                        $counter = 0;
                                        
                                        foreach( $history as $graph ){
                                            $the_time = strtotime($graph->time);
                                            $the_start = $axis_cover[$i];
                                            $the_end = $axis_cover[$i + 1];
                                            if (  $the_time > $the_start && $the_time < $the_end )
                                                $counter++;                                                    
                                        }
                                        
                                        $data_maker[] = $counter;
                                    }
                                    
                                    $lines[] = $data_maker;
                                    
                                endif;
                                
                            endforeach;

                            
                            for( $i = 0; $i < count($axis); $i++ ){
                                
                                $date_collecter   = array();
                                
                                $date_collecter[] = $axis[$i];
                                
                                foreach( $lines as $line )
                                    
                                    $date_collecter[] = $line[$i];
                                
                                $data[] = $date_collecter;
                            }
                            
                            ?>
                            
                            <script type="text/javascript" src="https://www.google.com/jsapi"></script>
                            <script type="text/javascript">
                              google.load("visualization", "1", {packages:["corechart"]});
                              google.setOnLoadCallback(drawChart);
                              function drawChart() {
                                
                                var data = google.visualization.arrayToDataTable(<?php echo json_encode($data); ?>);
                        
                                var options = {
                                  title: '<?php _e($graph_title); ?>'
                                };
                        
                                var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
                                chart.draw(data, options);
                              }
                            </script>
                        
                        <?php endif; // $rows ?>
                    </div><!--/.inside-->
                </div><!--/.postbox-->
            </div><!--/.second_half-->
        </div>
    <?php endif; // $_GET['v']
        
    }

    
    function page_out(){
        
        global $wpdb; ?>
        
        <?php do_action( 'page_tabs',
                         array(
                                'default' => __('All Visits for Current Month'),
                                'group' => __('By Group'),
                               )
                        ); ?>
        
        <?php if ( isset($_GET['v']) && $_GET['v'] == 'group' ): ?>
        
            <div id="poststuff">
                <div class="first_half">
                    <div class="postbox">
                        <h3 class="hndle"><?php _e('Pages / Per Group', 'bpa'); ?></h3>
                        <div class="inside">
                            
                            <?php
                            //Create an instance of our package class...
                            $chart_table = new Chart_Table();
                            
                            $chart_table->columns = array(
                                    'page'          => __( 'Page' ),
                            );
                            
                            $chart_table->sortable_columns = array(
                                    'page'          => array('page',false), //true means it's already sorted
                            );
                            
                            $keywords_query = "SELECT * FROM {$wpdb->prefix}bpa_page";
                            
                            if ( ! isset($_GET['period']) || empty($_GET['period']) ):
                                
                            $_GET['period'] = 'month';
                            $_GET['date_from'] = date('01.m.Y');
                                
                            endif;
                            
                            if ( isset($_GET['period']) && ! empty($_GET['period']) ):
                                
                                switch ( $_GET['period'] ):
                                    case 'day':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 day {$_GET['date_from']}"));
                                        break;
                                    
                                    case 'week':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 week {$_GET['date_from']}"));
                                        break;
                                    
                                    case 'month':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 month {$_GET['date_from']}"));
                                        break;
                                    
                                    case 'year':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 year {$_GET['date_from']}"));
                                        break;
                                    
                                endswitch;
    
                                $rec_range = bpa_sql_date_range( "{$_GET['date_from']}-{$date_to}", "{$wpdb->prefix}bpa_visits.time", true );
                                
                                if ( $rec_range )
                                    
                                    $keywords_query = " 
                                    SELECT * FROM
                                    {$wpdb->prefix}bpa_page
                                    INNER JOIN {$wpdb->prefix}bpa_visits
                                    INNER JOIN {$wpdb->prefix}bpa_group
                                    ON {$wpdb->prefix}bpa_page.page_id = {$wpdb->prefix}bpa_visits.page_id
                                    WHERE {$wpdb->prefix}bpa_group.statistic_id = {$wpdb->prefix}bpa_visits.id
                                    {$rec_range}
                                    ";
                            endif;
                            
                            $search_term = isset( $_REQUEST['s'] ) ? $_REQUEST['s'] : "";
                            
                            if ( $search_term && $page_title = apply_filters( 'clean_up_string', $search_term, TRUE ) )
                                   
                                $search = get_page_by_title( $page_title );
                                $search = isset( $search ) ? $search : "";
                            
                            if ( $search ):
                                
                                $keywords_query .= " WHERE {$wpdb->prefix}bpa_page.page_id = {$search->ID}";
                                
                            endif;
                            
                            $keywords_query .= " GROUP BY {$wpdb->prefix}bpa_page.page_id";
                            
                            
                            $keywords = $wpdb->get_results( $keywords_query );
                            
                            if ( $keywords ):
                                
                                foreach ($keywords as $keyword ):
                                    
                                    $page_title = get_the_title( $keyword->page_id );
                                    
                                    $rows[] = array(
                                                    'page'        => "<a href='". get_edit_post_link($keyword->page_id)."' target='_blank' title='See $page_title in a new window' >$page_title</a>",
                                    );
                                    
                                endforeach;
                                
                                $chart_table->data = $rows;
                            endif;
                            
                            //Fetch, prepare, sort, and filter our data...
                            $chart_table->prepare_items();
                            ?>
                            
                            <div class="clearfix">
                                <form method="get" class="pull-right">
                                    <?php $chart_table->search_box( __( 'Search' ), 'Keyword' ); ?>
                                </form>
                            </div>
                            <!-- Forms are NOT created automatically, so you need to wrap the table in one to use features like bulk actions -->
                            <form id="analytics-filter" method="get">
                                <!-- For plugins, we also need to ensure that the form posts back to our current page -->
                                <input type="hidden" name="page" value="<?php echo $_REQUEST['page'] ?>" />
                                <!-- Now we can render the completed list table -->
                                <?php $chart_table->display(); ?>
                            </form>
                            
                            <div class="clearfix">
                                <form method="get">
                                    <?php $chart_table->fiter_date_box( '', '' ); ?>
                                </form>
                            </div>
                        </div><!--/.inside-->
                    </div><!--/.postbox-->
                </div><!--/.first_half-->
                <div class="second_half">
                    <div class="postbox" id="sticky">
                        <h3 class="hndle" style="cursor:default"><?php _e('Chart', 'bpa'); ?></h3>
                        <div class="inside">
                            <p class="label"></p>
                            
                            <div id="chart_div" style="width: 100%; height: 500px;"></div>
                            
                            <?php if ( $keywords && ! empty($keywords) ): ?>
                                
                                <?php
                                
                                $axis = $axis_cover = $groups_history = $groups_ids = array();
                                $axis[] = $axis_cover[] = 'Pages';
                                foreach ( $keywords as $keyword ) :
                                    
                                    $axis[] = get_the_title($keyword->page_id);
                                    $axis_cover[] = $keyword->page_id;
                                    
                                    $history_query = "SELECT * FROM {$wpdb->prefix}bpa_visits
                                    INNER JOIN {$wpdb->prefix}bpa_group
                                    ON {$wpdb->prefix}bpa_visits.id = {$wpdb->prefix}bpa_group.statistic_id
                                    WHERE page_id = '{$keyword->page_id}' ";
                                    
                                    if ( $rec_range )
                                        
                                        $history_query .= $rec_range;
                                    
                                    $historis = $wpdb->get_results( $history_query );
                                    
                                    foreach ( $historis as $history ):
                                        
                                        $groups_history[$keyword->page_id][$history->group_id][] = true;
                                        
                                        if ( ! in_array( $history->group_id, $groups_ids ))
                                            
                                            $groups_ids[] = $history->group_id;
                                        
                                    endforeach;
                                    
                                endforeach;
                                
                                $lines = array();
                                foreach ( $groups_ids as $group_id ):
                                    
                                    $group_info = groups_get_group( array( 'group_id' => $group_id ) );
                                    $fitting_data = array();
                                    $fitting_data[] = $group_info->name;
                                    
                                    foreach( $groups_history as $group_history ){
                                        
                                        $fitting_data[] = count($group_history[$group_id]);
                                    }
                                    $lines[] = $fitting_data;
                                    
                                endforeach;
                                
                                for( $i = 0; $i < count($axis); $i++ ){
                                    
                                    $date_collecter   = array();
                                    
                                    $date_collecter[] = $axis[$i];
                                    
                                    foreach( $lines as $line )
                                        
                                        $date_collecter[] = $line[$i];
                                    
                                    $data[] = $date_collecter;
                                }
                                ?>
                                <script type="text/javascript" src="https://www.google.com/jsapi"></script>
                                <script type="text/javascript">
                                    google.load("visualization", "1", {packages: ["corechart"]});
                                    google.setOnLoadCallback(drawChart);
                                    function drawChart() {
                                        var data = google.visualization.arrayToDataTable(<?php echo json_encode($data); ?>);
                              
                                        var options = {
                                          legend: { position: 'top', maxLines: 3 },
                                          bar: { groupWidth: '75%' },
                                          isStacked: true,
                                        };
                                
                                        var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));
                                        chart.draw(data, options);
                                    }
                                </script>
                            <?php endif; // $rows ?>
                        </div><!--/.inside-->
                    </div><!--/.postbox-->
                </div><!--/.second_half-->
            </div>
        
        <?php else : ?>
            <div id="poststuff">
                <div class="first_half">
                    <div class="postbox">
                        <h3 class="hndle"><?php _e('Pages', 'bpa'); ?></h3>
                        <div class="inside">
                            
                            <?php
                            //Create an instance of our package class...
                            $chart_table = new Chart_Table();
                            
                            $chart_table->columns = array(
                                    'page'          => __( 'Page' ),
                                    'visits'        => __( 'Total Visited' ),
                            );
                            
                            $chart_table->sortable_columns = array(
                                    'page'          => array('page',false), //true means it's already sorted
                                    'visits'        => array('visits',false),
                            );
                            
                            $keywords_query = "SELECT * FROM {$wpdb->prefix}bpa_page";
                            
                            if ( ! isset($_GET['period']) || empty($_GET['period']) ):
                                
                            $_GET['period'] = 'month';
                            $_GET['date_from'] = date('01.m.Y');
                                
                            endif;
                            
                            if ( isset($_GET['period']) && ! empty($_GET['period']) ):
                                
                                switch ( $_GET['period'] ):
                                    case 'day':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 day {$_GET['date_from']}"));
                                        break;
                                    
                                    case 'week':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 week {$_GET['date_from']}"));
                                        break;
                                    
                                    case 'month':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 month {$_GET['date_from']}"));
                                        break;
                                    
                                    case 'year':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 year {$_GET['date_from']}"));
                                        break;
                                    
                                endswitch;
    
                                $rec_range = bpa_sql_date_range( "{$_GET['date_from']}-{$date_to}", "{$wpdb->prefix}bpa_visits.time", true );
                                
                                if ( $rec_range )
                                    
                                    $keywords_query = " 
                                    SELECT * FROM
                                    {$wpdb->prefix}bpa_page
                                    INNER JOIN {$wpdb->prefix}bpa_visits
                                    ON {$wpdb->prefix}bpa_page.page_id = {$wpdb->prefix}bpa_visits.page_id
                                    {$rec_range}
                                    ";
                            endif;
                            
                            $search_term = isset( $_REQUEST['s'] ) ? $_REQUEST['s'] : "";
                            
                            if ( $search_term && $page_title = apply_filters( 'clean_up_string', $search_term, TRUE ) )
                                   
                                $search = get_page_by_title( $page_title );
                                $search = isset( $search ) ? $search : "";
                            
                            if ( $search ):
                                
                                $keywords_query .= " WHERE {$wpdb->prefix}bpa_page.page_id = {$search->ID}";
                                
                            endif;
                            
                            $keywords_query .= " GROUP BY {$wpdb->prefix}bpa_page.page_id";
                            
                            
                            $keywords = $wpdb->get_results( $keywords_query );
                            
                            if ( $keywords ):
                                
                                foreach ($keywords as $keyword ):
                                    
                                    $page_title = get_the_title( $keyword->page_id );
                                    
                                    $count_query = "SELECT * FROM {$wpdb->prefix}bpa_visits WHERE page_id = '{$keyword->page_id}' ";
                                    
                                    if ( $rec_range )
                                        
                                        $count_query .= $rec_range;
                                    
                                    if ($count_object = $wpdb->get_results( $count_query ) ):
                                        
                                        $__count = count($count_object);
                                        
                                    else : $__count = $keyword->count; endif;
                                    
                                    $rows[] = array(
                                                    'page'        => "<a href='". get_edit_post_link($keyword->page_id)."' target='_blank' title='See $page_title in a new window' >$page_title</a>",
                                                    'visits'      => $__count,
                                    );
                                    
                                endforeach;
                                
                                $chart_table->data = $rows;
                            endif;
                            
                            //Fetch, prepare, sort, and filter our data...
                            $chart_table->prepare_items();
                            ?>
                            
                            <div class="clearfix">
                                <form method="get" class="pull-right">
                                    <?php $chart_table->search_box( __( 'Search' ), 'Keyword' ); ?>
                                </form>
                            </div>
                            <!-- Forms are NOT created automatically, so you need to wrap the table in one to use features like bulk actions -->
                            <form id="analytics-filter" method="get">
                                <!-- For plugins, we also need to ensure that the form posts back to our current page -->
                                <input type="hidden" name="page" value="<?php echo $_REQUEST['page'] ?>" />
                                <!-- Now we can render the completed list table -->
                                <?php $chart_table->display(); ?>
                            </form>
                            
                            <div class="clearfix">
                                <form method="get">
                                    <?php $chart_table->fiter_date_box( '', '' ); ?>
                                </form>
                            </div>
                        </div><!--/.inside-->
                    </div><!--/.postbox-->
                </div><!--/.first_half-->
                <div class="second_half">
                    <div class="postbox" id="sticky">
                        <h3 class="hndle" style="cursor:default"><?php _e('Chart', 'bpa'); ?></h3>
                        <div class="inside">
                            <p class="label"></p>
                            
                            <div id="chart_div" style="width: 100%; height: 500px;"></div>
                            
                            <?php if ( $keywords && ! empty($keywords) ): ?>
                                
                                <?php
                                
                                switch ( $_GET['period'] ):
                                    
                                    case 'day':
                                        
                                        $axis_cover = $axis  = array('Hours');
                                        for( $i = 0; $i < 25; $i++ ):
                                            
                                            if ( $i < 24 )
                                                $axis[] = date('ga', strtotime($_GET['date_from']) + 60*60*$i);
                                            
                                            $axis_cover[] = strtotime($_GET['date_from']) + 60*60*$i;
                                        endfor;
                                        $graph_title = date('dS m, Y. ga', strtotime($_GET['date_from']) ) . " - " . date('ga', $axis_cover[24] );
                                        break;
                                    
                                    case 'week':
                                        
                                        $axis_cover = $axis  = array('Days');
                                        for( $i = 0; $i < 8; $i++ ):
                                            
                                            if ( $i < 7 )
                                                $axis[] = date('D, dS', strtotime($_GET['date_from']) + 60*60*24*$i);
                                            
                                            $axis_cover[] = strtotime($_GET['date_from']) + 60*60*24*$i;
                                        endfor;
                                        $graph_title = date('dS, F Y', strtotime($_GET['date_from']) ) . " - " . date('dS, F Y', $axis_cover[7] );
                                        break;
                                    
                                    case 'month':
                                        
                                        $amount_of_days = date('t', strtotime($_GET['date_from']));
                                        $axis_cover = $axis  = array('Days');
                                        for( $i = 0; $i < $amount_of_days + 1; $i++ ):
                                            
                                            if ( $i < $amount_of_days )
                                                $axis[] = date('dS', strtotime($_GET['date_from']) + 60*60*24*$i);
                                            
                                            $axis_cover[] = strtotime($_GET['date_from']) + 60*60*24*$i;
                                        endfor;
                                        $graph_title = date('F Y', strtotime($_GET['date_from']) ) . " - " . date('F Y', $axis_cover[$amount_of_days] );
                                        break;
                                    
                                    case 'year':
                                        
                                        $axis_cover = $axis  = array('Months');
                                        for( $i = 0; $i < 13; $i++ ):
                                            
                                            if ( $i < 12 )
                                                $axis[] = date('M', strtotime("+{$i} month {$_GET['date_from']}"));
                                            
                                            $axis_cover[] = strtotime("+{$i} month {$_GET['date_from']}");
                                        endfor;
                                        $graph_title = date('F Y', strtotime($_GET['date_from']) ) . " - " . date('F Y', $axis_cover[12] );
                                        break;
                                    
                                endswitch;
                                     
                                    
                                foreach ( $keywords as $keyword ):
                                    
                                    if ( $rec_range )
                                        
                                        $count_query .= $rec_range;
                                    
                                        if ($history = $wpdb->get_results( $count_query ) ):
                                        
                                        $data_maker = array();
                                        
                                        // Grab the keyword
                                        $data_maker[] = ucwords(get_the_title( $keyword->page_id ));
                                        
                                        for( $i = 0; $i < count($axis); $i++ ){
                                            
                                            $counter = 0;
                                            
                                            foreach( $history as $graph ){
                                                $the_time = strtotime($graph->time);
                                                $the_start = $axis_cover[$i];
                                                $the_end = $axis_cover[$i + 1];
                                                if (  $the_time > $the_start && $the_time < $the_end )
                                                    $counter++;                                                    
                                            }
                                            
                                            $data_maker[] = $counter;
                                        }
                                        
                                        $lines[] = $data_maker;
                                        
                                    endif;
                                    
                                endforeach;
    
                                
                                for( $i = 0; $i < count($axis); $i++ ){
                                    
                                    $date_collecter   = array();
                                    
                                    $date_collecter[] = $axis[$i];
                                    
                                    foreach( $lines as $line )
                                        
                                        $date_collecter[] = $line[$i];
                                    
                                    $data[] = $date_collecter;
                                }
                                
                                ?>
                                
                                <script type="text/javascript" src="https://www.google.com/jsapi"></script>
                                <script type="text/javascript">
                                  google.load("visualization", "1", {packages:["corechart"]});
                                  google.setOnLoadCallback(drawChart);
                                  function drawChart() {
                                    
                                    var data = google.visualization.arrayToDataTable(<?php echo json_encode($data); ?>);
                            
                                    var options = {
                                      title: '<?php _e($graph_title); ?>'
                                    };
                            
                                    var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
                                    chart.draw(data, options);
                                  }
                                </script>
                                
                            <?php endif; // $rows ?>
                        </div><!--/.inside-->
                    </div><!--/.postbox-->
                </div><!--/.second_half-->
            </div>
        <?php endif; // $_GET['v']
    }

    
    function group_out(){
        
        global $wpdb; ?>
        
        <div id="poststuff">
            <div class="first_half">
                <div class="postbox">
                    <h3 class="hndle"><?php _e('Groups', 'bpa'); ?></h3>
                    <div class="inside">
                        
                        <?php
                        //Create an instance of our package class...
                        $chart_table = new Chart_Table();
                        
                        $chart_table->columns = array(
                                'group'          => __( 'Group' ),
                                'visits'        => __( 'Total Visits' ),
                        );
                        
                        $chart_table->sortable_columns = array(
                                'group'          => array('group',false), //true means it's already sorted
                                'visits'        => array('visits',false),
                        );
                        
                        $keywords_query = "SELECT * FROM {$wpdb->prefix}bpa_group";
                        
                        if ( ! isset($_GET['period']) || empty($_GET['period']) ):
                            
                        $_GET['period'] = 'month';
                        $_GET['date_from'] = date('01.m.Y');
                            
                        endif;
                        
                        if ( isset($_GET['period']) && ! empty($_GET['period']) ):
                            
                            switch ( $_GET['period'] ):
                                case 'day':
                                    
                                    $date_to = date('d.m.Y', strtotime("+1 day {$_GET['date_from']}"));
                                    break;
                                
                                case 'week':
                                    
                                    $date_to = date('d.m.Y', strtotime("+1 week {$_GET['date_from']}"));
                                    break;
                                
                                case 'month':
                                    
                                    $date_to = date('d.m.Y', strtotime("+1 month {$_GET['date_from']}"));
                                    break;
                                
                                case 'year':
                                    
                                    $date_to = date('d.m.Y', strtotime("+1 year {$_GET['date_from']}"));
                                    break;
                                
                            endswitch;

                            $rec_range = bpa_sql_date_range( "{$_GET['date_from']}-{$date_to}", "{$wpdb->prefix}bpa_visits.time", true );
                            
                            if ( $rec_range )
                                
                                $keywords_query = " 
                                SELECT * FROM
                                {$wpdb->prefix}bpa_group
                                INNER JOIN {$wpdb->prefix}bpa_visits
                                ON {$wpdb->prefix}bpa_group.statistic_id = {$wpdb->prefix}bpa_visits.id
                                {$rec_range}
                                ";
                        endif;
                        
                        $search_term = isset( $_REQUEST['s'] ) ? $_REQUEST['s'] : "";
                        
                        if ( $search_term && $group_slug = apply_filters( 'clean_up_string', $search_term, TRUE, TRUE ) )
                            
                            $search = BP_Groups_Group::group_exists($group_slug); 
                            $search = isset( $search ) ? $search : "";
                        
                        if ( $search ):
                            
                            $keywords_query .= " WHERE {$wpdb->prefix}bpa_group.group_id = {$search}";
                            
                        endif;
                        
                        $keywords_query .= " GROUP BY {$wpdb->prefix}bpa_group.group_id";
                        
                        $keywords = $wpdb->get_results( $keywords_query );
                        
                        if ( $keywords ):
                            
                            foreach ($keywords as $keyword ):
                                
                                $group = groups_get_group( array( 'group_id' => $keyword->group_id ) );
                                $page_title = $group->name;
                                
                                $count_query = "SELECT * FROM
                                {$wpdb->prefix}bpa_visits
                                INNER JOIN {$wpdb->prefix}bpa_group
                                WHERE {$wpdb->prefix}bpa_group.group_id = {$keyword->group_id}
                                AND {$wpdb->prefix}bpa_group.statistic_id = {$wpdb->prefix}bpa_visits.id ";
                                
                                if ( $rec_range )
                                    
                                    $count_query .= $rec_range;
                                
                                if ($count_object = $wpdb->get_results( $count_query ) ):
                                    
                                    $__count = count($count_object);
                                    
                                else : $__count = $keyword->count; endif;
                                
                                $rows[] = array(
                                                'group'       => $page_title,
                                                'visits'      => $__count,
                                );
                                
                            endforeach;
                            
                            $chart_table->data = $rows;
                        endif;
                        
                        //Fetch, prepare, sort, and filter our data...
                        $chart_table->prepare_items();
                        ?>
                        
                        <div class="clearfix">
                            <form method="get" class="pull-right">
                                <?php $chart_table->search_box( __( 'Search' ), 'Keyword' ); ?>
                            </form>
                        </div>
                        <!-- Forms are NOT created automatically, so you need to wrap the table in one to use features like bulk actions -->
                        <form id="analytics-filter" method="get">
                            <!-- For plugins, we also need to ensure that the form posts back to our current page -->
                            <input type="hidden" name="page" value="<?php echo $_REQUEST['page'] ?>" />
                            <!-- Now we can render the completed list table -->
                            <?php $chart_table->display(); ?>
                        </form>
                        
                        <div class="clearfix">
                            <form method="get">
                                <?php $chart_table->fiter_date_box( '', '' ); ?>
                            </form>
                        </div>
                    </div><!--/.inside-->
                </div><!--/.postbox-->
            </div><!--/.first_half-->
            <div class="second_half">
                <div class="postbox" id="sticky">
                    <h3 class="hndle" style="cursor:default"><?php _e('Chart', 'bpa'); ?></h3>
                    <div class="inside">
                        <p class="label"></p>
                        
                        <div id="chart_div" style="width: 100%; height: 500px;"></div>
                        
                        <?php if ( $keywords && ! empty($keywords) ): ?>
                            
                            <?php
                            
                            switch ( $_GET['period'] ):
                                
                                case 'day':
                                    
                                    $axis_cover = $axis  = array('Hours');
                                    for( $i = 0; $i < 25; $i++ ):
                                        
                                        if ( $i < 24 )
                                            $axis[] = date('ga', strtotime($_GET['date_from']) + 60*60*$i);
                                        
                                        $axis_cover[] = strtotime($_GET['date_from']) + 60*60*$i;
                                    endfor;
                                    $graph_title = date('dS m, Y. ga', strtotime($_GET['date_from']) ) . " - " . date('ga', $axis_cover[24] );
                                    break;
                                
                                case 'week':
                                    
                                    $axis_cover = $axis  = array('Days');
                                    for( $i = 0; $i < 8; $i++ ):
                                        
                                        if ( $i < 7 )
                                            $axis[] = date('D, dS', strtotime($_GET['date_from']) + 60*60*24*$i);
                                        
                                        $axis_cover[] = strtotime($_GET['date_from']) + 60*60*24*$i;
                                    endfor;
                                    $graph_title = date('dS, F Y', strtotime($_GET['date_from']) ) . " - " . date('dS, F Y', $axis_cover[7] );
                                    break;
                                
                                case 'month':
                                    
                                    $amount_of_days = date('t', strtotime($_GET['date_from']));
                                    $axis_cover = $axis  = array('Days');
                                    for( $i = 0; $i < $amount_of_days + 1; $i++ ):
                                        
                                        if ( $i < $amount_of_days )
                                            $axis[] = date('dS', strtotime($_GET['date_from']) + 60*60*24*$i);
                                        
                                        $axis_cover[] = strtotime($_GET['date_from']) + 60*60*24*$i;
                                    endfor;
                                    $graph_title = date('F Y', strtotime($_GET['date_from']) ) . " - " . date('F Y', $axis_cover[$amount_of_days] );
                                    break;
                                
                                case 'year':
                                    
                                    $axis_cover = $axis  = array('Months');
                                    for( $i = 0; $i < 13; $i++ ):
                                        
                                        if ( $i < 12 )
                                            $axis[] = date('M', strtotime("+{$i} month {$_GET['date_from']}"));
                                        
                                        $axis_cover[] = strtotime("+{$i} month {$_GET['date_from']}");
                                    endfor;
                                    $graph_title = date('F Y', strtotime($_GET['date_from']) ) . " - " . date('F Y', $axis_cover[12] );
                                    break;
                                
                            endswitch;
                                
                                
                                
                            foreach ( $keywords as $keyword ):
                                
                                if ( $rec_range )
                                    
                                    $count_query .= $rec_range;
                                
                                    if ($history = $wpdb->get_results( $count_query ) ):
                                    
                                    $data_maker = array();
                                    
                                    // Grab the keyword
                                    $group = groups_get_group( array( 'group_id' => $keyword->group_id ) );
                                    $data_maker[] = ucwords( $group->name );
                                    
                                    for( $i = 0; $i < count($axis); $i++ ){
                                        
                                        $counter = 0;
                                        
                                        foreach( $history as $graph ){
                                            $the_time = strtotime($graph->time);
                                            $the_start = $axis_cover[$i];
                                            $the_end = $axis_cover[$i + 1];
                                            if (  $the_time > $the_start && $the_time < $the_end )
                                                $counter++;                                                    
                                        }
                                        
                                        $data_maker[] = $counter;
                                    }
                                    
                                    $lines[] = $data_maker;
                                    
                                endif;
                                
                            endforeach;

                            
                            for( $i = 0; $i < count($axis); $i++ ){
                                
                                $date_collecter   = array();
                                
                                $date_collecter[] = $axis[$i];
                                
                                foreach( $lines as $line )
                                    
                                    $date_collecter[] = $line[$i];
                                
                                $data[] = $date_collecter;
                            }
                            
                            ?>
                            
                            <script type="text/javascript" src="https://www.google.com/jsapi"></script>
                            <script type="text/javascript">
                              google.load("visualization", "1", {packages:["corechart"]});
                              google.setOnLoadCallback(drawChart);
                              function drawChart() {
                                
                                var data = google.visualization.arrayToDataTable(<?php echo json_encode($data); ?>);
                        
                                var options = {
                                  title: '<?php _e($graph_title); ?>'
                                };
                        
                                var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
                                chart.draw(data, options);
                              }
                            </script>
                            
                        <?php endif; // $rows ?>
                    </div><!--/.inside-->
                </div><!--/.postbox-->
            </div><!--/.second_half-->
        </div>
        <?php
    }

  
    /**
     * Registers Active time page and appends the key to the theme settings tabs array.
     */
    function register_site_settings(){
        $this->bpa_settings_tabs[$this->site_settings_key] = '<span class="icons icon-time"></span>'.__('Site-Wide Analytics', 'bpa');

        register_setting( $this->site_settings_key, $this->site_settings_key );
        add_settings_section(
            'site_analytics', // section id
            '', // title
            array( &$this, 'site_out' ), // method handler
            $this->site_settings_key // slug
        );
    }
    
    function site_out(){
        
        global $wpdb; ?>
        <?php do_action( 'page_tabs',
                         array(
                                'default' => __('All Visits for Current Month'),
                                
                               )
                        ); ?>
        <?php if ( isset($_GET['v']) && $_GET['v'] == 'time-spent' ): ?>
        
            <div id="poststuff">
                <div class="first_half">
                    <div class="postbox">
                        <h3 class="hndle"><?php _e('Site-Wide Analytics / Time Spent', 'bpa'); ?></h3>
                        <div class="inside">
                            
                            <?php
                            //Create an instance of our package class...
                            $chart_table = new Chart_Table();
                            
                            $chart_table->columns = array(
                                    'page'          => __( 'Page' ),
                                    'visits'        => __( 'User Time Spent' ),
                            );
                            
                            $chart_table->sortable_columns = array(
                                    'page'          => array('page',false), //true means it's already sorted
                                    'visits'        => array('visits',false),
                            );
                            
                            $keywords_query = "SELECT * FROM {$wpdb->prefix}bpa_time_spent";
                            
                            if ( ! isset($_GET['period']) || empty($_GET['period']) ):
                                
                            $_GET['period'] = 'month';
                            $_GET['date_from'] = date('01.m.Y');
                                
                            endif;
                            
                            if ( isset($_GET['period']) && ! empty($_GET['period']) ):
                                
                                switch ( $_GET['period'] ):
                                    case 'day':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 day {$_GET['date_from']}"));
                                        break;
                                    
                                    case 'week':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 week {$_GET['date_from']}"));
                                        break;
                                    
                                    case 'month':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 month {$_GET['date_from']}"));
                                        break;
                                    
                                    case 'year':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 year {$_GET['date_from']}"));
                                        break;
                                    
                                endswitch;
    
                                $rec_range = bpa_sql_date_range( "{$_GET['date_from']}-{$date_to}", "time" );
                                
                                if ( $rec_range )
                                    
                                    $keywords_query = " 
                                    SELECT * FROM
                                    {$wpdb->prefix}bpa_time_spent
                                    WHERE id > 0
                                    {$rec_range}
                                    ";
                            endif;
                            
                            $search_term = isset( $_REQUEST['s'] ) ? $_REQUEST['s'] : "";
                            
                            if ( $search_term && $page_title = apply_filters( 'clean_up_string', $search_term, TRUE ) )
                                   
                                $search = get_page_by_title( $page_title );
                                $search = isset( $search ) ? $search : "";
                                
                            if ( $search ):
                                
                                $keywords_query .= " AND page_id = {$search->ID}";
                                
                            endif;
                            
                            $keywords_query .= " GROUP BY page_id";
                            
                            
                            $keywords = $wpdb->get_results( $keywords_query );
                            
                            if ( $keywords ):
                                
                                foreach ($keywords as $keyword ):
                                    
                                    $page_title = get_the_title( $keyword->page_id );
                                    
                                    $count_query = "SELECT * FROM {$wpdb->prefix}bpa_time_spent WHERE page_id = '{$keyword->page_id}' ";
                                    
                                    if ( $rec_range )
                                        
                                        $count_query .= $rec_range;
                                    
                                    if ($count_object = $wpdb->get_results( $count_query ) ):
                                        
                                        $counter = 0;
                                        foreach( $count_object as $spent_data )
                                            
                                            $counter += $spent_data->spent;
                                        
                                        $counter = time_elapsed(round($counter / 1000));
                                        
                                    else : $counter = 'Not Found!'; endif;
                                    
                                    $rows[] = array(
                                                    'page'        => "<a href='". get_edit_post_link($keyword->page_id)."' target='_blank' title='See $page_title in a new window' >$page_title</a>",
                                                    'visits'      => $counter,
                                    );
                                    
                                endforeach;
                                
                                $chart_table->data = $rows;
                            endif;
                            
                            //Fetch, prepare, sort, and filter our data...
                            $chart_table->prepare_items();
                            ?>
                            
                            <div class="clearfix">
                                <form method="get" class="pull-right">
                                    <?php $chart_table->search_box( __( 'Search' ), 'Keyword' ); ?>
                                </form>
                            </div>
                            <!-- Forms are NOT created automatically, so you need to wrap the table in one to use features like bulk actions -->
                            <form id="analytics-filter" method="get">
                                <!-- For plugins, we also need to ensure that the form posts back to our current page -->
                                <input type="hidden" name="page" value="<?php echo $_REQUEST['page'] ?>" />
                                <!-- Now we can render the completed list table -->
                                <?php $chart_table->display(); ?>
                            </form>
                            
                            <div class="clearfix">
                                <form method="get">
                                    <?php $chart_table->fiter_date_box( '', '' ); ?>
                                </form>
                            </div>
                        </div><!--/.inside-->
                    </div><!--/.postbox-->
                </div><!--/.first_half-->
                <div class="second_half">
                    <div class="postbox" id="sticky">
                        <h3 class="hndle" style="cursor:default"><?php _e('Chart', 'bpa'); ?></h3>
                        <div class="inside">
                            <p class="label"></p>
                            
                            <div id="chart_div" style="width: 100%; height: 500px;"></div>
                            
                            <?php if ( $keywords && ! empty($keywords) ): ?>
                                
                                <?php
                                
                                switch ( $_GET['period'] ):
                                    
                                    case 'day':
                                        
                                        $axis_cover = $axis  = array('Hours');
                                        for( $i = 0; $i < 25; $i++ ):
                                            
                                            if ( $i < 24 )
                                                $axis[] = date('ga', strtotime($_GET['date_from']) + 60*60*$i);
                                            
                                            $axis_cover[] = strtotime($_GET['date_from']) + 60*60*$i;
                                        endfor;
                                        $graph_title = date('dS m, Y. ga', strtotime($_GET['date_from']) ) . " - " . date('ga', $axis_cover[24] );
                                        break;
                                    
                                    case 'week':
                                        
                                        $axis_cover = $axis  = array('Days');
                                        for( $i = 0; $i < 8; $i++ ):
                                            
                                            if ( $i < 7 )
                                                $axis[] = date('D, dS', strtotime($_GET['date_from']) + 60*60*24*$i);
                                            
                                            $axis_cover[] = strtotime($_GET['date_from']) + 60*60*24*$i;
                                        endfor;
                                        $graph_title = date('dS, F Y', strtotime($_GET['date_from']) ) . " - " . date('dS, F Y', $axis_cover[7] );
                                        break;
                                    
                                    case 'month':
                                        
                                        $amount_of_days = date('t', strtotime($_GET['date_from']));
                                        $axis_cover = $axis  = array('Days');
                                        for( $i = 0; $i < $amount_of_days + 1; $i++ ):
                                            
                                            if ( $i < $amount_of_days )
                                                $axis[] = date('dS', strtotime($_GET['date_from']) + 60*60*24*$i);
                                            
                                            $axis_cover[] = strtotime($_GET['date_from']) + 60*60*24*$i;
                                        endfor;
                                        $graph_title = date('F Y', strtotime($_GET['date_from']) ) . " - " . date('F Y', $axis_cover[$amount_of_days] );
                                        break;
                                    
                                    case 'year':
                                        
                                        $axis_cover = $axis  = array('Months');
                                        for( $i = 0; $i < 13; $i++ ):
                                            
                                            if ( $i < 12 )
                                                $axis[] = date('M', strtotime("+{$i} month {$_GET['date_from']}"));
                                            
                                            $axis_cover[] = strtotime("+{$i} month {$_GET['date_from']}");
                                        endfor;
                                        $graph_title = date('F Y', strtotime($_GET['date_from']) ) . " - " . date('F Y', $axis_cover[12] );
                                        break;
                                    
                                endswitch;
                                        
                                    
                                foreach ( $keywords as $keyword ):
                                    
                                    $history_query = "SELECT * FROM {$wpdb->prefix}bpa_time_spent WHERE page_id = '{$keyword->page_id}' ";
                                    
                                    if ( $rec_range )
                                        
                                        $history_query .= $rec_range;
                                    
                                    if ($history = $wpdb->get_results( $history_query ) ):
                                        
                                        $data_maker = array();
                                        
                                        // Grab the keyword
                                        $data_maker[] = ucwords(get_the_title($keyword->page_id));
                                        
                                        for( $i = 0; $i < count($axis); $i++ ){
                                            
                                            $counter = 0;
                                            
                                            foreach( $history as $graph ){
                                                $the_time = strtotime($graph->time);
                                                $the_start = $axis_cover[$i];
                                                $the_end = $axis_cover[$i + 1];
                                                if (  $the_time > $the_start && $the_time < $the_end )
                                                    $counter+= round((($graph->spent / 1000)/60), 0);                                                    
                                            }
                                            
                                            $data_maker[] = $counter;
                                        }
                                        
                                        $lines[] = $data_maker;
                                        
                                    endif;
                                    
                                endforeach;
    
                                
                                for( $i = 0; $i < count($axis); $i++ ){
                                    
                                    $date_collecter   = array();
                                    
                                    $date_collecter[] = $axis[$i];
                                    
                                    foreach( $lines as $line )
                                        
                                        $date_collecter[] = $line[$i];
                                    
                                    $data[] = $date_collecter;
                                }
                                
                                ?>
                                
                                <script type="text/javascript" src="https://www.google.com/jsapi"></script>
                                <script type="text/javascript">
                                  google.load("visualization", "1", {packages:["corechart"]});
                                  google.setOnLoadCallback(drawChart);
                                  function drawChart() {
                                    
                                    var data = google.visualization.arrayToDataTable(<?php echo json_encode($data); ?>);
                            
                                    var options = {
                                      title: '<?php _e($graph_title); ?> ( minutes )'
                                    };
                            
                                    var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
                                    chart.draw(data, options);
                                  }
                                </script>
                            
                            <?php endif; // $rows ?>
                        </div><!--/.inside-->
                    </div><!--/.postbox-->
                </div><!--/.second_half-->
            </div>
        
        <?php else : ?>
        
            <div id="poststuff">
                <div class="first_half">
                    <div class="postbox">
                        <h3 class="hndle"><?php _e('Site-Wide Analytics', 'bpa'); ?></h3>
                        <div class="inside">
                            
                            <?php
                            //Create an instance of our package class...
                            $chart_table = new Chart_Table();
                            
                            $keywords_query = "SELECT * FROM {$wpdb->prefix}bpa_group";
                            
                            if ( ! isset($_GET['period']) || empty($_GET['period']) ):
                                
                            $_GET['period'] = 'month';
                            $_GET['date_from'] = date('01.m.Y');
                                
                            endif;
                            
                            if ( isset($_GET['period']) && ! empty($_GET['period']) ):
                                
                                switch ( $_GET['period'] ):
                                    case 'day':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 day {$_GET['date_from']}"));
                                        break;
                                    
                                    case 'week':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 week {$_GET['date_from']}"));
                                        break;
                                    
                                    case 'month':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 month {$_GET['date_from']}"));
                                        break;
                                    
                                    case 'year':
                                        
                                        $date_to = date('d.m.Y', strtotime("+1 year {$_GET['date_from']}"));
                                        break;
                                    
                                endswitch;
    
                                $rec_range = bpa_sql_date_range( "{$_GET['date_from']}-{$date_to}", "{$wpdb->prefix}bpa_visits.time", true );
                                
                                if ( $rec_range )
                                    
                                    $keywords_query = " 
                                    SELECT * FROM
                                    {$wpdb->prefix}bpa_visits
                                    WHERE id > 0 
                                    {$rec_range}
                                    ";
                            endif;
                            
                            $keywords = $wpdb->get_results( $keywords_query );
                            
                            ?>
                            
                            <div class="clearfix">
                                <br/>
                                <form method="get">
                                    <?php $chart_table->fiter_date_box( '', '' ); ?>
                                </form>
                            </div>
                        </div><!--/.inside-->
                    </div><!--/.postbox-->
                </div><!--/.first_half-->
                <div class="second_half">
                    <div class="postbox" id="sticky">
                        <h3 class="hndle" style="cursor:default"><?php _e('Chart', 'bpa'); ?></h3>
                        <div class="inside">
                            <p class="label"></p>
                            
                            <div id="chart_div" style="width: 100%; height: 500px;"></div>
                            
                            <?php if ( $keywords && ! empty($keywords) ): ?>
                                
                                <?php
                                
                                switch ( $_GET['period'] ):
                                    
                                    case 'day':
                                        
                                        $axis_cover = $axis  = array('Hours');
                                        for( $i = 0; $i < 25; $i++ ):
                                            
                                            if ( $i < 24 )
                                                $axis[] = date('ga', strtotime($_GET['date_from']) + 60*60*$i);
                                            
                                            $axis_cover[] = strtotime($_GET['date_from']) + 60*60*$i;
                                        endfor;
                                        $graph_title = date('dS m, Y. ga', strtotime($_GET['date_from']) ) . " - " . date('ga', $axis_cover[24] );
                                        break;
                                    
                                    case 'week':
                                        
                                        $axis_cover = $axis  = array('Days');
                                        for( $i = 0; $i < 8; $i++ ):
                                            
                                            if ( $i < 7 )
                                                $axis[] = date('D, dS', strtotime($_GET['date_from']) + 60*60*24*$i);
                                            
                                            $axis_cover[] = strtotime($_GET['date_from']) + 60*60*24*$i;
                                        endfor;
                                        $graph_title = date('dS, F Y', strtotime($_GET['date_from']) ) . " - " . date('dS, F Y', $axis_cover[7] );
                                        break;
                                    
                                    case 'month':
                                        
                                        $amount_of_days = date('t', strtotime($_GET['date_from']));
                                        $axis_cover = $axis  = array('Days');
                                        for( $i = 0; $i < $amount_of_days + 1; $i++ ):
                                            
                                            if ( $i < $amount_of_days )
                                                $axis[] = date('dS', strtotime($_GET['date_from']) + 60*60*24*$i);
                                            
                                            $axis_cover[] = strtotime($_GET['date_from']) + 60*60*24*$i;
                                        endfor;
                                        $graph_title = date('F Y', strtotime($_GET['date_from']) ) . " - " . date('F Y', $axis_cover[$amount_of_days] );
                                        break;
                                    
                                    case 'year':
                                        
                                        $axis_cover = $axis  = array('Months');
                                        for( $i = 0; $i < 13; $i++ ):
                                            
                                            if ( $i < 12 )
                                                $axis[] = date('M', strtotime("+{$i} month {$_GET['date_from']}"));
                                            
                                            $axis_cover[] = strtotime("+{$i} month {$_GET['date_from']}");
                                        endfor;
                                        $graph_title = date('F Y', strtotime($_GET['date_from']) ) . " - " . date('F Y', $axis_cover[12] );
                                        break;
                                    
                                endswitch;
                                    
                                    
                                    
                                    if ( $history = $keywords ):
                                        
                                        $data_maker = array();
                                        
                                        // Grab the keyword
                                        $data_maker[] = __( 'Visit' );
                                        
                                        for( $i = 0; $i < count($axis); $i++ ){
                                            
                                            $counter = 0;
                                            
                                            foreach( $history as $graph ){
                                                $the_time = strtotime($graph->time);
                                                $the_start = $axis_cover[$i];
                                                $the_end = $axis_cover[$i + 1];
                                                if (  $the_time > $the_start && $the_time < $the_end )
                                                    $counter++;                                                    
                                            }
                                            
                                            $data_maker[] = $counter;
                                        }
                                        
                                        $lines[] = $data_maker;
                                        
                                    endif;
                                    
    
                                
                                for( $i = 0; $i < count($axis); $i++ ){
                                    
                                    $date_collecter   = array();
                                    
                                    $date_collecter[] = $axis[$i];
                                    
                                    foreach( $lines as $line )
                                        
                                        $date_collecter[] = $line[$i];
                                    
                                    $data[] = $date_collecter;
                                }
                                
                                ?>
                                
                                <script type="text/javascript" src="https://www.google.com/jsapi"></script>
                                <script type="text/javascript">
                                  google.load("visualization", "1", {packages:["corechart"]});
                                  google.setOnLoadCallback(drawChart);
                                  function drawChart() {
                                    
                                    var data = google.visualization.arrayToDataTable(<?php echo json_encode($data); ?>);
                            
                                    var options = {
                                      title: '<?php _e($graph_title); ?>'
                                    };
                            
                                    //var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
                                    var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
                                    chart.draw(data, options);
                                  }
                                </script>
                                
                            <?php endif; // $rows ?>
                        </div><!--/.inside-->
                    </div><!--/.postbox-->
                </div><!--/.second_half-->
            </div>
        <?php endif;
    }
  
    /**
     * Registers Active time page and appends the key to the theme settings tabs array.
     */
    function register_activity_settings(){
        $this->bpa_settings_tabs[$this->activity_settings_key] = '<span class="icons icon-time"></span>'.__('Activity Time', 'bpa');

        register_setting( $this->activity_settings_key, $this->activity_settings_key );
        add_settings_section(
            'activity_time', // section id
            '', // title
            array( &$this, 'activity_out' ), // method handler
            $this->activity_settings_key // slug
        );
    }

    function activity_out(){ ?>
        <div id="poststuff">
            <div class="first_half">
                <div class="postbox">
                    <h3 class="hndle"><?php _e('Options to Choose From', 'bpa'); ?></h3>
                    <div class="inside">
                        <p class="datepicker">
                            <?php _e('By default all the data is taken into account on graphs.', 'bpa'); ?><br />
                            <?php _e('In case it takes <abbr title="This means too many data is processed at a time">an infinity to load</abbr> use date filter below.', 'bpa'); ?><br /><br />
                            <input type="checkbox" id="date_range" name="date_range" />
                            <input type="text" name="date_from" value="<?php echo date('d.m.Y', time() - 2592000)?>" />
                            <input type="text" name="date_to" value="<?php echo date('d.m.Y'); ?>" />
                            <a id="apply_date" class="button" href="#"><?php _e('Apply', 'bpa'); ?></a>
                        </p>

                        <ul class="other">
                            <li>
                                <label>
                                    <input type="radio" name="other_data" class="other_data" value="date_reg" />&nbsp;
                                    <?php _e('Hours your users are registering the most','bpa'); ?>
                                </label>
                            </li>
                            <li>
                                <label>
                                    <input type="radio" name="other_data" class="other_data" value="date_active" />&nbsp;
                                    <?php _e('Hours your users are active the most (in general)','bpa'); ?>
                                </label>
                                <?php
                                $actions = bpa_get_all_activity_actions();
                                if(!empty($actions)){ ?>
                                    <ul class="actions_by"><li><a href="#" class="by_type button"><?php _e('Show By Type', 'bpa'); ?></a></li></ul>
                                    <ul class="actions">
                                        <?php foreach($actions as $action => $name){ ?>
                                            <li>
                                                <label>
                                                    <input type="radio" name="activity_action" class="other_data" value="<?php echo $action; ?>" />&nbsp;<?php echo $name; ?>
                                                </label>
                                            </li>
                                        <?php } ?>
                                    </ul>
                                <?php } ?>
                            </li>
                        </ul>
                    </div><!--/.inside-->
                </div><!--/.postbox-->
            </div><!--/.first_half-->
            <?php $this->right_sidebar(); ?>
        </div>
        <?php
    }


    function right_sidebar(){ ?>
        <div class="second_half">
            <div class="postbox" id="sticky">
                <h3 class="hndle" style="cursor:default"><?php _e('Chart', 'bpa'); ?></h3>
                <div class="inside">
                    <p class="label"></p>
                    <div id="graph"></div>
                </div><!--/.inside-->
            </div><!--/.postbox-->
        </div><!--/.second_half-->
        <?php
    }

    /**
     * Adds a page with all subpages (tabs)
     */
    function add_admin_menu() {
        $page = add_submenu_page(
                'options-general.php',
                __('BuddyPress Analytics', 'bpa'),
                __('BuddyPress Analytics', 'bpa'),
                'edit_users',
                $this->bpa_options_key,
                array( &$this, 'bpa_page' )
            );

        bpa_load_assets($page);
    }

    /**
     * BPA page rendering goes here, checks for active tab.
     */
    function bpa_page() {
        $tab = isset( $_GET['tab'] ) ? $_GET['tab'] : $this->dash_settings_key; ?>
        <div id="bpa-admin" class="wrap" style="min-width: 1150px">
            <?php $this->bpa_header(); ?>
            <?php if ( $tab != 'bpa_admin_search_query' &&
                       $tab != 'bpa_admin_user_query'   &&
                       $tab != 'bpa_admin_group_query'  &&
                       $tab != 'bpa_admin_site_query'   &&
                       $tab != 'bpa_admin_page_query'   ): ?>
            <form method="post" action="">
            <?php endif; ?>
                <?php
                wp_nonce_field( 'bpa-update-options' );
                //settings_fields( $tab );
                do_settings_sections( $tab );
                //submit_button();
                ?>
            <?php if ( $tab != 'bpa_admin_search_query' &&
                       $tab != 'bpa_admin_user_query'   &&
                       $tab != 'bpa_admin_group_query'  &&
                       $tab != 'bpa_admin_site_query'   &&
                       $tab != 'bpa_admin_page_query'   ): ?>
            </form>
            <?php endif; ?>
            <div class="clearfix"></div>
            <?php $this->bpa_footer(); ?>
        </div>
        <?php
    }

    /**
     * Renders header titles and tabs on the BPA page.
     */
    function bpa_header() {
        $current_tab = isset($_GET['tab']) ? $_GET['tab'] : $this->dash_settings_key;

        echo '<h1>';
                _e('BuddyPress Analytics','bpa');
        echo '</h1>';
        
        echo '<div class="updated"><p>';
        echo 'Buy full plugin version with Search, Users, Page, Groups and Time Analytics for <strong>only $49</strong>. <a href="https://dessky.com/plugins/buddypress-analytics-by-dessky/" target="_blank">Read more here.</a>';
        echo '</p></div>';

        echo '<h2 class="nav-tab-wrapper">';
        foreach ( $this->bpa_settings_tabs as $tab_key => $tab_caption ) {
            $active = $current_tab == $tab_key ? 'nav-tab-active' : '';
            echo '<a class="nav-tab ' . $active . '" href="?page=' . $this->bpa_options_key . '&tab=' . $tab_key . '">' . $tab_caption . '</a>';
        }
        echo '</h2>';
    }

    function bpa_footer(){ ?>
       <!--Coming Soon-->
        <?php
    }

};

// Initialize BPA Options
$bpa_admin = new BPA_Admin_Tabs;

class BPA_Dash_Widget {

}

?>